// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./__generated__"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  email    String @unique @db.Citext
  password String

  name String
  avatar     String?

  role UserRole @default(REGULAR)

  isVerified         Boolean @default(false) @map("is_verified")
  isTwoFactorEnabled Boolean @default(false) @map("is_two_factor_enabled")

  method AuthMethod

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  accounts Account[]
  skillProfile SkillProfile?

  @@map("users")
}

model SkillProfile {
  id String @id @default(uuid())

  headline String?

  profilename String? @unique @map("profile_name")

  githubUrl String? @map("github_url")
  vkUrl String? @map("vk_url")
  telegramUrl String? @map("telegram_url")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique @map("user_id")

  @@map("skill_profile")
}

model Account {
  id String @id @default(uuid())

  accountId String @map("unique_id")

  type     String
  provider String

  refreshToken String?  @map("refresh_token")
  accessToken  String?  @map("access_token")
  expiresAt    DateTime @map("expires_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@unique([accountId, provider])
  @@map("accounts")
}

model Token {
  id String @id @default(uuid())

  email     String
  token     String
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  oauthToken String? @unique @map("oauth_token")

  @@unique([token, type])
  @@map("tokens")
}

enum UserRole {
  REGULAR
  ADMIN
}

enum AuthMethod {
  CREDENTIALS
  GOOGLE
  GITHUB
  YANDEX
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
  CHANGE_EMAIL
}
